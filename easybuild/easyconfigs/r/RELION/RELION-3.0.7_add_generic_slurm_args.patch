Make queuename argument correct in the submit file template.
Add timelimit and a field for any extra sbatch arguments.

Ã…ke Sandgren, 2020-03-04
diff -ru relion-3.0.7.orig/src/gui_entries.h relion-3.0.7/src/gui_entries.h
--- relion-3.0.7.orig/src/gui_entries.h	2019-07-02 11:57:24.000000000 +0200
+++ relion-3.0.7/src/gui_entries.h	2020-03-04 08:56:59.022393902 +0100
@@ -82,10 +82,10 @@
 #define MENUHEIGHT 30
 #define TABHEIGHT 25
 #define GUIWIDTH 800
-#define GUIHEIGHT_OLD 420+GUIEXTRA
-#define GUIHEIGHT_EXT_START 370+GUIEXTRA
+#define GUIHEIGHT_OLD 440+GUIEXTRA
+#define GUIHEIGHT_EXT_START 390+GUIEXTRA
 #define GUIHEIGHT_EXT_START2 (GUIHEIGHT_EXT_START+MENUHEIGHT+10)
-#define GUIHEIGHT_EXT 800+GUIEXTRA
+#define GUIHEIGHT_EXT 820+GUIEXTRA
 #define XCOL0 200
 #define WCOL0 200
 #define XCOL1 ( (XCOL0) + 10  )
diff -ru relion-3.0.7.orig/src/gui_jobwindow.cpp relion-3.0.7/src/gui_jobwindow.cpp
--- relion-3.0.7.orig/src/gui_jobwindow.cpp	2019-07-02 11:57:24.000000000 +0200
+++ relion-3.0.7/src/gui_jobwindow.cpp	2020-03-04 08:59:00.820992331 +0100
@@ -240,9 +240,11 @@
 
 	queue_group->begin();
 
+        place("qsub");
 	place("queuename");
 
-	place("qsub");
+	place("timelimit");
+	place("extrasbatch");
 
 	char * extra_count_text = getenv ("RELION_QSUB_EXTRA_COUNT");
 	const char extra_count_val = (extra_count_text ? atoi(extra_count_text) : 2);
diff -ru relion-3.0.7.orig/src/pipeline_jobs.cpp relion-3.0.7/src/pipeline_jobs.cpp
--- relion-3.0.7.orig/src/pipeline_jobs.cpp	2019-07-02 11:57:24.000000000 +0200
+++ relion-3.0.7/src/pipeline_jobs.cpp	2020-03-04 09:00:45.359789713 +0100
@@ -455,7 +455,17 @@
 		replacing["XXXnameXXX"] = outputname;
 		replacing["XXXerrfileXXX"] = outputname + "run.err";
 		replacing["XXXoutfileXXX"] = outputname + "run.out";
-		replacing["XXXqueueXXX"] = joboptions["queuename"].getString();
+                if (!joboptions["queuename"].getString().empty()) {
+                    replacing["XXXqueueXXX"] = "-p " + joboptions["queuename"].getString();
+                } else {
+                    replacing["XXXqueueXXX"] = "";
+                }
+                if (!joboptions["timelimit"].getString().empty()) {
+                    replacing["XXXtimelimitXXX"] = "-t " + joboptions["timelimit"].getString();
+                } else {
+                    replacing["XXXtimelimitXXX"] = "";
+                }
+                replacing["XXXextrasbatchXXX"] = joboptions["extrasbatch"].getString();
 		char * extra_count_text = getenv ("RELION_QSUB_EXTRA_COUNT");
 		const char extra_count_val = (extra_count_text ? atoi(extra_count_text) : 2);
 		for (int i=1; i<=extra_count_val; i++)
@@ -795,6 +805,13 @@
 Note that the person who installed RELION should have made a custom script for your cluster/queue setup. Check this is the case \
 (or create your own script following the RELION Wiki) if you have trouble submitting jobs. The default command can be set through the environment variable RELION_QSUB_COMMAND.");
 
+	joboptions["timelimit"] = JobOption("Timelimit - format days-hh:mm:ss:", std::string(""), "Timelimit requested for the job.\n\n\
+Note that the person who installed RELION should have made a custom script for your cluster/queue setup. Check this is the case \
+(or create your own script following the RELION Wiki) if you have trouble submitting jobs. The default command can be set through the environment variable RELION_QSUB_COMMAND.");
+
+	joboptions["extrasbatch"] = JobOption("Other sbatch arguments:", std::string(""), "Other arguments to sbatch you want to specify.\n\n\
+Note that the person who installed RELION should have made a custom script for your cluster/queue setup. Check this is the case \
+(or create your own script following the RELION Wiki) if you have trouble submitting jobs. The default command can be set through the environment variable RELION_QSUB_COMMAND.");
 
 	// additional options that may be set through environment variables RELION_QSUB_EXTRAi and RELION_QSUB_EXTRAi (for more flexibility)
 	char * extra_count_text = getenv ("RELION_QSUB_EXTRA_COUNT");
@@ -855,7 +872,7 @@
 Likewise, default values for the extra entries can be set through environment variables RELION_QSUB_EXTRA1_DEFAULT, RELION_QSUB_EXTRA2_DEFAULT, etc. \
 But note that (unlike all other entries in the GUI) the extra values are not remembered from one run to the other.");
 
-	// Check for environment variable RELION_QSUB_TEMPLATE
+	// Check for environment variable RELION_MINIMUM_DEDICATED
 	char * my_minimum_dedicated = getenv ("RELION_MINIMUM_DEDICATED");
 	int minimum_nr_dedicated = (my_minimum_dedicated == NULL) ? DEFAULTMININIMUMDEDICATED : textToInteger(my_minimum_dedicated);
 	joboptions["min_dedicated"] = JobOption("Minimum dedicated cores per node:", minimum_nr_dedicated, 1, 64, 1, "Minimum number of dedicated cores that need to be requested on each node. This is useful to force the queue to fill up entire nodes of a given size. The default can be set through the environment variable RELION_MINIMUM_DEDICATED.");
